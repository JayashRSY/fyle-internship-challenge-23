var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ApiService.html",[0,0.657,1,1.318]],["body/injectables/ApiService.html",[0,0.903,1,1.81,2,1.339,3,0.55,4,0.55,5,0.445,6,1.96,7,0.668,8,1.081,9,1.849,10,3.826,11,1.285,12,2.649,13,2.649,14,1.81,15,2.5,16,4.411,17,1.312,18,3.378,19,1.456,20,0.067,21,1.225,22,1.312,23,1.726,24,3.378,25,2.417,26,2.456,27,3.459,28,3.826,29,2.5,30,1.96,31,1.285,32,3.378,33,2.5,34,2.5,35,1.128,36,1.128,37,3.378,38,0.744,39,1.605,40,0.445,41,1.605,42,1.339,43,0.55,44,0.55,45,2.169,46,2.5,47,1.96,48,2.5,49,2.5,50,2.5,51,0.045,52,0.045]],["title/components/AppComponent.html",[53,0.437,54,0.657]],["body/components/AppComponent.html",[1,1.801,3,0.193,4,0.193,5,0.156,7,0.234,8,0.48,9,1.05,11,0.571,14,1.248,17,1.18,19,0.748,20,0.067,21,0.838,22,1.254,23,0.887,25,0.803,26,2.554,27,3.203,30,2.523,31,0.886,35,1.288,36,1.288,38,0.513,40,0.156,42,0.803,43,0.193,44,0.791,47,0.687,51,0.02,52,0.02,53,0.35,54,0.622,55,0.676,56,0.469,57,0.469,58,0.469,59,0.469,60,0.687,61,0.469,62,1.53,63,1.288,64,0.803,65,1.966,66,0.803,67,1.499,68,2.618,69,3.361,70,2.618,71,1.966,72,1.966,73,2.618,74,3.119,75,2.854,76,2.238,77,1.176,78,1.826,79,0.876,80,1.664,81,2.238,82,1.572,83,1.499,84,2.732,85,1.499,86,1.499,87,3.484,88,1.542,89,2.393,90,1.966,91,1.966,92,1.966,93,1.826,94,2.328,95,2.328,96,2.328,97,2.328,98,2.328,99,2.328,100,2.328,101,2.328,102,1.966,103,1.248,104,2.618,105,1.542,106,1.542,107,2.618,108,2.817,109,3.051,110,0.876,111,1.499,112,1.499,113,1.176,114,2.732,115,1.826,116,1.176,117,2.238,118,2.238,119,2.238,120,2.238,121,1.499,122,2.328,123,1.724,124,0.876,125,1.176,126,1.542,127,1.499,128,1.499,129,1.176,130,0.963,131,1.176,132,1.499,133,4.085,134,0.876,135,1.499,136,2.053,137,1.826,138,0.676,139,2.328,140,1.966,141,1.054,142,1.966,143,1.966,144,1.966,145,1.966,146,2.328,147,1.499,148,0.876,149,1.966,150,2.618,151,0.876,152,0.876,153,1.966,154,0.876,155,1.499,156,0.876,157,1.966,158,0.876,159,0.876,160,0.876,161,0.876,162,0.876,163,2.053,164,1.499,165,1.499,166,0.876,167,1.499,168,0.876,169,1.176,170,1.966,171,1.499,172,1.499,173,1.499,174,1.499,175,0.876,176,1.966,177,1.499,178,0.876,179,0.876,180,0.562,181,1.499,182,0.876,183,0.876,184,0.876,185,0.876,186,1.499,187,1.499,188,1.499,189,1.499,190,1.499,191,1.499,192,1.176,193,1.499,194,0.333,195,0.803,196,0.803,197,0.469,198,1.248,199,0.469,200,0.469,201,0.234,202,0.469,203,0.234,204,0.469,205,0.234,206,0.469,207,0.469]],["title/modules/AppModule.html",[208,1.579,209,1.318]],["body/modules/AppModule.html",[3,0.516,4,0.516,5,0.417,20,0.067,38,1.01,39,1.505,40,0.417,43,0.516,44,0.516,51,0.043,52,0.043,54,1.263,141,1.256,194,0.892,201,1.156,203,1.156,205,1.156,208,1.505,209,2.58,210,1.505,211,1.256,212,2.902,213,2.902,214,2.902,215,1.838,216,1.838,217,1.838,218,1.838,219,1.838,220,1.952,221,2.535,222,1.838,223,1.838,224,2.344,225,3.232,226,3.232,227,1.838,228,2.344,229,3.232,230,3.232,231,3.232,232,1.838,233,2.344,234,2.344,235,2.344,236,2.344,237,2.344,238,2.344,239,2.344,240,2.344,241,2.344,242,1.505]],["title/components/LoaderComponent.html",[53,0.437,201,0.657]],["body/components/LoaderComponent.html",[3,0.633,4,0.633,5,0.511,20,0.066,21,1.185,38,0.633,40,0.511,43,0.633,44,0.633,51,0.05,52,0.05,53,0.729,54,0.768,55,1.671,56,1.54,57,1.54,58,1.54,59,1.54,61,1.54,62,2.458,63,2.069,64,1.985,66,1.985,103,1.54,194,1.094,195,1.985,196,1.985,197,1.54,198,2.32,199,1.54,200,1.54,201,1.157,202,1.54,203,0.768,204,1.54,205,0.768,206,1.54,207,1.54,243,2.253,244,3.704,245,4.098,246,3.704]],["title/interceptors/LoaderInterceptor.html",[220,1.109,247,1.928]],["body/interceptors/LoaderInterceptor.html",[0,0.945,3,0.59,4,0.59,5,0.476,7,0.715,11,1.346,14,1.435,17,1.132,19,1.346,20,0.067,21,1.132,22,1.132,23,1.595,31,1.019,38,0.965,39,1.719,40,0.476,43,0.59,44,0.59,45,1.719,51,0.047,52,0.047,80,2.03,192,3.106,220,1.595,248,2.678,249,3.106,250,2.1,251,3.537,252,2.678,253,2.678,254,3.537,255,4.213,256,4.213,257,2.678,258,2.678,259,3.106,260,3.537,261,2.678,262,1.208,263,2.678,264,3.537,265,2.678,266,2.678,267,2.1,268,2.678,269,2.678,270,2.678]],["title/injectables/LoaderService.html",[0,0.657,80,1.109]],["body/injectables/LoaderService.html",[0,0.985,2,1.53,3,0.629,4,0.629,5,0.508,7,0.763,8,1.18,9,1.843,11,1.403,17,1.382,20,0.067,31,1.403,35,1.664,36,1.664,38,0.812,40,0.508,41,1.833,42,1.53,43,0.629,44,0.629,51,0.049,52,0.049,80,1.664,123,1.976,138,1.664,262,1.288,271,2.239,272,4.085,273,4.085,274,4.318,275,4.318,276,2.855,277,2.855,278,3.688,279,2.855,280,3.688,281,2.855,282,2.855,283,2.855,284,2.855]],["title/components/RepositoryComponent.html",[53,0.437,203,0.657]],["body/components/RepositoryComponent.html",[3,0.603,4,0.603,5,0.487,7,0.731,17,0.876,20,0.065,21,1.149,22,0.876,38,0.603,40,0.487,43,0.603,44,0.603,51,0.048,52,0.048,53,0.712,54,0.731,55,1.619,56,1.467,57,1.467,58,1.467,59,1.467,61,1.467,62,2.426,63,2.042,64,1.923,66,1.923,103,1.467,180,2.304,194,1.042,195,1.923,196,1.923,197,1.467,198,2.277,199,1.467,200,1.467,201,0.731,202,1.467,203,1.135,204,1.467,205,0.731,206,1.467,207,1.467,285,2.146,286,4.003,287,3.588,288,3.588,289,4.003,290,2.737,291,3.588,292,2.737,293,2.737,294,3.588,295,2.737]],["title/components/ToastComponent.html",[53,0.437,205,0.657]],["body/components/ToastComponent.html",[3,0.345,4,0.345,5,0.279,7,0.419,8,0.771,9,1.086,11,0.916,14,1.572,17,1.251,19,0.596,20,0.068,21,0.939,22,1.325,23,0.707,25,1.291,31,0.916,35,1.486,36,1.486,38,0.646,40,0.279,43,0.345,44,0.345,51,0.032,52,0.032,53,0.522,54,0.419,55,1.086,56,0.839,57,0.839,58,0.839,59,0.839,61,0.839,62,2.011,63,1.693,64,1.291,66,1.291,81,3.066,82,1.867,84,2.943,103,2.264,105,2.301,106,1.228,108,2.583,120,1.888,123,1.765,129,1.888,130,1.546,131,1.888,163,1.228,194,0.596,195,1.291,196,1.291,197,0.839,198,1.765,199,0.839,200,0.839,201,0.419,202,0.839,203,0.419,204,0.839,205,0.88,206,0.839,207,0.839,242,1.006,259,1.888,262,0.707,267,1.228,296,1.228,297,2.934,298,2.408,299,2.301,300,2.301,301,3.555,302,3.555,303,3.753,304,3.753,305,1.566,306,2.408,307,2.408,308,2.301,309,2.934,310,2.934,311,2.934,312,1.566,313,2.408,314,2.408,315,3.245,316,2.408,317,2.408,318,2.408,319,1.566,320,2.408,321,1.546,322,2.408,323,2.408,324,2.408,325,3.753,326,1.566,327,1.566,328,1.566,329,1.566,330,1.566,331,1.566,332,1.566,333,1.566,334,1.566,335,1.566,336,1.566,337,1.566,338,2.408,339,1.566,340,1.566]],["title/injectables/ToastService.html",[0,0.657,82,1.109]],["body/injectables/ToastService.html",[0,0.924,2,1.388,3,0.57,4,0.57,5,0.461,7,0.692,8,1.107,9,1.757,11,1.316,17,1.331,19,1.316,20,0.067,21,1.107,22,1.107,23,1.56,25,2.388,31,1.482,35,1.168,36,1.168,38,0.762,40,0.461,41,1.663,42,1.388,43,0.57,44,0.57,45,1.663,51,0.046,52,0.046,82,1.56,123,1.854,138,1.56,242,2.221,262,1.168,299,2.712,300,2.712,315,2.712,321,2.669,341,2.031,342,3.895,343,4.157,344,3.459,345,3.459,346,2.589,347,3.459,348,2.589,349,3.459,350,2.589,351,3.895,352,2.589,353,2.589,354,3.459]],["title/coverage.html",[355,2.619]],["body/coverage.html",[0,1.133,1,1.656,5,0.55,6,2.423,20,0.065,22,0.989,51,0.052,52,0.052,53,0.791,54,0.825,60,2.423,80,1.394,82,1.394,138,1.394,201,0.825,203,0.825,205,0.825,220,1.394,243,2.423,247,2.423,249,2.423,250,2.423,271,2.423,285,2.423,296,2.423,341,2.423,355,2.423,356,3.089,357,3.089,358,3.089,359,3.089,360,3.089,361,4.674,362,3.089,363,3.089,364,3.089,365,3.089,366,4.239,367,3.089,368,3.089,369,3.089]],["title/dependencies.html",[211,1.582,370,1.616]],["body/dependencies.html",[20,0.067,40,0.588,51,0.054,52,0.054,141,2.166,211,1.769,227,3.169,232,2.589,262,1.489,371,3.302,372,4.857,373,3.302,374,3.302,375,3.302,376,3.302,377,3.302,378,3.302,379,3.302,380,3.302,381,3.302,382,3.302,383,3.302]],["title/index.html",[7,0.551,384,2.061,385,2.061]],["body/index.html",[12,1.828,13,1.828,19,0.887,20,0.058,26,2.068,51,0.049,52,0.043,53,0.573,63,1.453,74,2.894,76,3.121,77,2.525,78,2.525,88,1.828,89,2.894,93,2.525,113,2.894,114,2.894,115,1.828,116,1.828,117,1.828,118,1.828,119,1.828,125,1.828,126,3.121,130,2.068,137,1.828,138,1.453,169,2.525,180,1.497,308,2.894,321,1.497,386,2.331,387,3.69,388,3.22,389,2.331,390,2.331,391,3.69,392,3.69,393,2.331,394,3.69,395,2.331,396,4.427,397,2.331,398,2.331,399,2.331,400,2.331,401,2.331,402,3.69,403,2.331,404,1.828,405,2.331,406,2.331,407,2.331,408,3.22,409,4.319,410,2.331,411,3.22,412,2.331,413,2.331,414,2.331,415,2.331,416,2.331,417,2.331,418,2.331,419,3.69,420,3.22,421,2.331,422,2.331,423,4.177,424,2.331,425,2.331,426,2.331,427,2.331,428,2.331,429,3.22,430,2.331,431,2.331,432,2.331,433,2.331,434,2.331,435,2.331,436,2.331,437,2.331,438,2.331,439,2.331,440,2.331,441,2.331,442,2.331,443,2.331]],["title/modules.html",[210,2.145]],["body/modules.html",[20,0.059,51,0.059,52,0.059,141,2.034,209,2.034,210,2.436,404,2.976,444,3.795,445,3.795]],["title/overview.html",[446,2.619]],["body/overview.html",[2,1.644,20,0.064,51,0.052,52,0.052,54,1.265,55,1.384,136,2.405,194,1.167,201,1.129,203,1.129,205,1.129,208,2.479,209,2.649,211,1.644,212,2.405,213,2.405,214,2.405,215,2.405,216,2.405,217,2.405,218,2.405,219,2.405,220,1.906,221,3.028,222,2.405,223,2.405,446,2.405,447,3.067,448,3.067]],["title/properties.html",[8,0.945,370,1.616]],["body/properties.html",[8,1.225,20,0.062,51,0.059,52,0.059,449,3.828,450,3.828]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":361,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":450,"title":{},"body":{"properties.html":{}}}],["0.13.0",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["10",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["100",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["16.1.0",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":317,"title":{},"body":{"components/ToastComponent.html":{}}}],["3",{"_index":448,"title":{},"body":{"overview.html":{}}}],["3.1.1",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["3/8",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":447,"title":{},"body":{"overview.html":{}}}],["46",{"_index":359,"title":{},"body":{"coverage.html":{}}}],["6/13",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":379,"title":{},"body":{"dependencies.html":{}}}],["_apiservice",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["_loaderservice",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["_toastservice",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["according",{"_index":435,"title":{},"body":{"index.html":{}}}],["accordingly",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["actual_component",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{}}}],["adjust",{"_index":432,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":39,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"interceptors/LoaderInterceptor.html":{}}}],["angular/compiler",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":40,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"coverage.html":{}}}],["apiurl",{"_index":10,"title":{},"body":{"injectables/ApiService.html":{}}}],["app",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["app.component",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":54,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":209,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["autohidetoast",{"_index":303,"title":{},"body":{"components/ToastComponent.html":{}}}],["based",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["beforeeach",{"_index":417,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":282,"title":{},"body":{"injectables/LoaderService.html":{}}}],["behaviorsubject(false",{"_index":280,"title":{},"body":{"injectables/LoaderService.html":{}}}],["bit.ly/jayashrsy",{"_index":400,"title":{},"body":{"index.html":{}}}],["block",{"_index":418,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":325,"title":{},"body":{"components/ToastComponent.html":{}}}],["bootstrap",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["browse",{"_index":445,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["call",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["calls",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["case",{"_index":438,"title":{},"body":{"index.html":{}}}],["cases",{"_index":410,"title":{},"body":{"index.html":{}}}],["change",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["checks",{"_index":419,"title":{},"body":{"index.html":{}}}],["class",{"_index":44,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["click",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["cluster_appmodule",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["component",{"_index":53,"title":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{}},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{}}}],["components",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"overview.html":{}}}],["components/loader/loader.component",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["components/repository/repository.component",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["components/toast/toast.component",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["console",{"_index":443,"title":{},"body":{"index.html":{}}}],["const",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interceptors/LoaderInterceptor.html":{},"components/ToastComponent.html":{}}}],["constructor(_apiservice",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(_toastservice",{"_index":305,"title":{},"body":{"components/ToastComponent.html":{}}}],["constructor(httpclient",{"_index":15,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(loaderservice",{"_index":252,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["constructor(private",{"_index":267,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ToastComponent.html":{}}}],["correctly",{"_index":424,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":355,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":426,"title":{},"body":{"index.html":{}}}],["created",{"_index":420,"title":{},"body":{"index.html":{}}}],["current",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["currentpage",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["data",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["declarations",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":35,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/LoaderService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["defined",{"_index":17,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["delay",{"_index":316,"title":{},"body":{"components/ToastComponent.html":{}}}],["demo",{"_index":389,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":211,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["directive",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{}}}],["directives",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{}}}],["display",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["displaying",{"_index":311,"title":{},"body":{"components/ToastComponent.html":{}}}],["displays",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{}}}],["dynamic",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["element",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{}}}],["endpoints",{"_index":434,"title":{},"body":{"index.html":{}}}],["ensures",{"_index":422,"title":{},"body":{"index.html":{}}}],["err",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["error",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["event",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["event.target",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["example",{"_index":391,"title":{},"body":{"index.html":{}}}],["executed",{"_index":441,"title":{},"body":{"index.html":{}}}],["export",{"_index":43,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["exports",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["fails",{"_index":427,"title":{},"body":{"index.html":{}}}],["false",{"_index":315,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["fetch",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["fetched",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["fetches",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["finalize",{"_index":264,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["finder",{"_index":388,"title":{},"body":{"index.html":{}}}],["first",{"_index":411,"title":{},"body":{"index.html":{}}}],["flags",{"_index":322,"title":{},"body":{"components/ToastComponent.html":{}}}],["formsmodule",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["function",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["functionality",{"_index":310,"title":{},"body":{"components/ToastComponent.html":{}}}],["getrepolist",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["getrepositories",{"_index":12,"title":{},"body":{"injectables/ApiService.html":{},"index.html":{}}}],["getrepositories(username",{"_index":24,"title":{},"body":{"injectables/ApiService.html":{}}}],["getting",{"_index":384,"title":{"index.html":{}},"body":{}}],["gettoastobservable",{"_index":343,"title":{},"body":{"injectables/ToastService.html":{}}}],["getuser",{"_index":13,"title":{},"body":{"injectables/ApiService.html":{},"index.html":{}}}],["getuser(githubusername",{"_index":32,"title":{},"body":{"injectables/ApiService.html":{}}}],["getuserdetails",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["github",{"_index":387,"title":{},"body":{"index.html":{}}}],["githubusername",{"_index":34,"title":{},"body":{"injectables/ApiService.html":{}}}],["give",{"_index":405,"title":{},"body":{"index.html":{}}}],["given",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["handle",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["helped",{"_index":407,"title":{},"body":{"index.html":{}}}],["hide",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["hideloader",{"_index":274,"title":{},"body":{"injectables/LoaderService.html":{}}}],["html",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{}}}],["htmlselectelement",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["http",{"_index":413,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":16,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpclientmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":261,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httphandler",{"_index":256,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httpinterceptor",{"_index":260,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httprequest",{"_index":255,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["https://api.github.com/users",{"_index":37,"title":{},"body":{"injectables/ApiService.html":{}}}],["identifier",{"_index":357,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":266,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["import",{"_index":38,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["imports",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["indicate",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["indicators",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["initializes",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiService.html":{},"injectables/LoaderService.html":{},"injectables/ToastService.html":{}},"body":{"injectables/ApiService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiService.html":{},"injectables/LoaderService.html":{},"injectables/ToastService.html":{},"overview.html":{}}}],["input",{"_index":291,"title":{},"body":{"components/RepositoryComponent.html":{}}}],["inputs",{"_index":288,"title":{},"body":{"components/RepositoryComponent.html":{}}}],["install",{"_index":390,"title":{},"body":{"index.html":{}}}],["instance",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["instantiated",{"_index":412,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":251,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["intercept(request",{"_index":254,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interceptor",{"_index":247,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptor.service",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.service.ts",{"_index":250,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"coverage.html":{}}}],["interceptor.service.ts:13",{"_index":253,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interceptor.service.ts:16",{"_index":257,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interceptors",{"_index":248,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interface",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["iserror",{"_index":299,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["issuccess",{"_index":300,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["isvisible",{"_index":301,"title":{},"body":{"components/ToastComponent.html":{}}}],["items",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["itemsperpage",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["iusage",{"_index":393,"title":{},"body":{"index.html":{}}}],["jayash",{"_index":398,"title":{},"body":{"index.html":{}}}],["jayashrsy",{"_index":402,"title":{},"body":{"index.html":{}}}],["keypress",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"overview.html":{}}}],["linkedin",{"_index":403,"title":{},"body":{"index.html":{}}}],["list",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["loader",{"_index":244,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'name",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{}}}],["loader.component.html",{"_index":246,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":245,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.service",{"_index":263,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["loadercomponent",{"_index":201,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loaderinterceptor",{"_index":220,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LoaderInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["loaderservice",{"_index":80,"title":{"injectables/LoaderService.html":{}},"body":{"components/AppComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"coverage.html":{}}}],["loaderstate",{"_index":272,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loadersubject",{"_index":273,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loading",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["make",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["makes",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["matching",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["maxitemsperpage",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":321,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["messages",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["metadata",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{}}}],["method",{"_index":423,"title":{},"body":{"index.html":{}}}],["methods",{"_index":11,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["milliseconds",{"_index":318,"title":{},"body":{"components/ToastComponent.html":{}}}],["mock",{"_index":433,"title":{},"body":{"index.html":{}}}],["module",{"_index":208,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":210,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["multi",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":21,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["navigate",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["new",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoaderService.html":{},"injectables/ToastService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"interceptors/LoaderInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":269,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["ng",{"_index":440,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":304,"title":{},"body":{"components/ToastComponent.html":{}}}],["note",{"_index":430,"title":{},"body":{"index.html":{}}}],["notifications",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["npm",{"_index":392,"title":{},"body":{"index.html":{}}}],["null",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["number",{"_index":27,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{}}}],["observable",{"_index":259,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ToastComponent.html":{}}}],["occurred",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["octokit",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["onitemsperpagechange",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["onitemsperpagechange(event",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["onpagechange",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["onpagechange(pagenumber",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["option",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["optional",{"_index":23,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interceptors/LoaderInterceptor.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["out",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":446,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":370,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":26,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"index.html":{}}}],["pagenumber",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["param",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["parameter",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["parameters",{"_index":19,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interceptors/LoaderInterceptor.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["parseint(target.value",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["per",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["perpage",{"_index":28,"title":{},"body":{"injectables/ApiService.html":{}}}],["previous",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["private",{"_index":9,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/LoaderService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["process",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["progress",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["project",{"_index":406,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/LoaderService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"properties.html":{}}}],["property",{"_index":314,"title":{},"body":{"components/ToastComponent.html":{}}}],["provide",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["providedin",{"_index":41,"title":{},"body":{"injectables/ApiService.html":{},"injectables/LoaderService.html":{},"injectables/ToastService.html":{}}}],["providers",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provides",{"_index":309,"title":{},"body":{"components/ToastComponent.html":{}}}],["public",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["repo",{"_index":289,"title":{},"body":{"components/RepositoryComponent.html":{}}}],["repo.description",{"_index":293,"title":{},"body":{"components/RepositoryComponent.html":{}}}],["repo.name",{"_index":292,"title":{},"body":{"components/RepositoryComponent.html":{}}}],["repo.name}}{{repo.description",{"_index":295,"title":{},"body":{"components/RepositoryComponent.html":{}}}],["repolist",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["repositories",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["repository",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/RepositoryComponent.html":{},"index.html":{}}}],["repository'},{'name",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{}}}],["repository.component.html",{"_index":287,"title":{},"body":{"components/RepositoryComponent.html":{}}}],["repository.component.scss",{"_index":286,"title":{},"body":{"components/RepositoryComponent.html":{}}}],["repositorycomponent",{"_index":203,"title":{"components/RepositoryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["represents",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["request",{"_index":258,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["res",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["reset",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resets",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["response",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["results",{"_index":51,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["retrieves",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["return",{"_index":45,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/ToastService.html":{}}}],["returns",{"_index":31,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["root",{"_index":42,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/LoaderService.html":{},"injectables/ToastService.html":{}}}],["root'},{'name",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{}}}],["run",{"_index":394,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":262,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":265,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["scenario",{"_index":428,"title":{},"body":{"index.html":{}}}],["search",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["second",{"_index":421,"title":{},"body":{"index.html":{}}}],["see",{"_index":442,"title":{},"body":{"index.html":{}}}],["selector",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{}}}],["service",{"_index":308,"title":{},"body":{"components/ToastComponent.html":{},"index.html":{}}}],["services/api.service",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["services/http",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["services/loader.service",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["services/toast.service",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["set",{"_index":415,"title":{},"body":{"index.html":{}}}],["sets",{"_index":313,"title":{},"body":{"components/ToastComponent.html":{}}}],["show",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["showerror",{"_index":344,"title":{},"body":{"injectables/ToastService.html":{}}}],["showerror(message",{"_index":347,"title":{},"body":{"injectables/ToastService.html":{}}}],["showloader",{"_index":275,"title":{},"body":{"injectables/LoaderService.html":{}}}],["showsuccess",{"_index":345,"title":{},"body":{"injectables/ToastService.html":{}}}],["showsuccess(message",{"_index":349,"title":{},"body":{"injectables/ToastService.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["specific",{"_index":436,"title":{},"body":{"index.html":{}}}],["spinners",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:40",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:61",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:79",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:90",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/loader/loader.component.ts",{"_index":243,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/components/repository/repository.component.ts",{"_index":285,"title":{},"body":{"components/RepositoryComponent.html":{},"coverage.html":{}}}],["src/app/components/repository/repository.component.ts:9",{"_index":290,"title":{},"body":{"components/RepositoryComponent.html":{}}}],["src/app/components/toast/toast.component.ts",{"_index":296,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["src/app/components/toast/toast.component.ts:11",{"_index":328,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/components/toast/toast.component.ts:12",{"_index":327,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/components/toast/toast.component.ts:13",{"_index":326,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/components/toast/toast.component.ts:14",{"_index":306,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/components/toast/toast.component.ts:27",{"_index":319,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/components/toast/toast.component.ts:40",{"_index":312,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/services/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts:14",{"_index":33,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:17",{"_index":29,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:8",{"_index":18,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/http",{"_index":249,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"coverage.html":{}}}],["src/app/services/loader.service.ts",{"_index":271,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["src/app/services/loader.service.ts:11",{"_index":277,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/services/loader.service.ts:15",{"_index":276,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/services/loader.service.ts:8",{"_index":281,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/services/loader.service.ts:9",{"_index":279,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/services/toast.service",{"_index":330,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/services/toast.service.ts",{"_index":341,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/services/toast.service.ts:10",{"_index":346,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/services/toast.service.ts:14",{"_index":350,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/services/toast.service.ts:18",{"_index":348,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/services/toast.service.ts:8",{"_index":352,"title":{},"body":{"injectables/ToastService.html":{}}}],["started",{"_index":385,"title":{"index.html":{}},"body":{}}],["startrun",{"_index":395,"title":{},"body":{"index.html":{}}}],["state",{"_index":324,"title":{},"body":{"components/ToastComponent.html":{}}}],["statements",{"_index":358,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":25,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["styles",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{}}}],["styleurls",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{}}}],["subject",{"_index":351,"title":{},"body":{"injectables/ToastService.html":{}}}],["subscribe((repositories",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribes",{"_index":320,"title":{},"body":{"components/ToastComponent.html":{}}}],["success",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["successfully",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["such",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["support",{"_index":404,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":431,"title":{},"body":{"index.html":{}}}],["svg",{"_index":444,"title":{},"body":{"modules.html":{}}}],["table",{"_index":369,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":307,"title":{},"body":{"components/ToastComponent.html":{}}}],["target",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["target.value",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["template",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{}}}],["templateurl",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{}}}],["test",{"_index":409,"title":{},"body":{"index.html":{}}}],["testauthor",{"_index":397,"title":{},"body":{"index.html":{}}}],["testing",{"_index":414,"title":{},"body":{"index.html":{}}}],["tests",{"_index":396,"title":{},"body":{"index.html":{}}}],["third",{"_index":425,"title":{},"body":{"index.html":{}}}],["this._apiservice.getrepositories(this.username",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["this._apiservice.getuser(this.username).subscribe((res",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this._toastservice.gettoastobservable().subscribe((toastdata",{"_index":331,"title":{},"body":{"components/ToastComponent.html":{}}}],["this._toastservice.showerror(\"no",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["this._toastservice.showerror(err.error.message",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["this._toastservice.showsuccess(\"repository",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["this._toastservice.showsuccess(\"user",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["this.apiurl}${username}/repos?page=${page}&per_page=${perpage",{"_index":49,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.autohidetoast",{"_index":339,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.currentpage",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["this.getrepolist",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["this.httpclient.get(`${this.apiurl}${githubusername",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.httpclient.get(url",{"_index":50,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.iserror",{"_index":336,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.issuccess",{"_index":334,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.isvisible",{"_index":338,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.itemsperpage",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loaderservice.hideloader",{"_index":270,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loaderservice.showloader",{"_index":268,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loadersubject.asobservable",{"_index":278,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.loadersubject.next(false",{"_index":284,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.loadersubject.next(true",{"_index":283,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.repolist",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toastmessage",{"_index":332,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toastsubject.asobservable",{"_index":353,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toastsubject.next",{"_index":354,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.user",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["timer",{"_index":329,"title":{},"body":{"components/ToastComponent.html":{}}}],["timer(2000).subscribe",{"_index":340,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{}}}],["toast.component.html",{"_index":298,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.component.scss",{"_index":297,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcomponent",{"_index":205,"title":{"components/ToastComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toastdata.iserror",{"_index":337,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastdata.issuccess",{"_index":335,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastdata.message",{"_index":333,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastmessage",{"_index":302,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastservice",{"_index":82,"title":{"injectables/ToastService.html":{}},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastsubject",{"_index":342,"title":{},"body":{"injectables/ToastService.html":{}}}],["topic",{"_index":294,"title":{},"body":{"components/RepositoryComponent.html":{}}}],["tree",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{}}}],["true",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["tslib",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":401,"title":{},"body":{"index.html":{}}}],["type",{"_index":22,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interceptors/LoaderInterceptor.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["unit",{"_index":408,"title":{},"body":{"index.html":{}}}],["up",{"_index":416,"title":{},"body":{"index.html":{}}}],["update",{"_index":429,"title":{},"body":{"index.html":{}}}],["updates",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["url",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{}}}],["use",{"_index":437,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["user",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["user.bio",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["user.html_url",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["user.location",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["user.name",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["username",{"_index":30,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{}}}],["using",{"_index":439,"title":{},"body":{"index.html":{}}}],["value",{"_index":36,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/LoaderService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["var",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/RepositoryComponent.html":{},"components/ToastComponent.html":{}}}],["variable",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["variables",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["version",{"_index":449,"title":{},"body":{"properties.html":{}}}],["visibility",{"_index":323,"title":{},"body":{"components/ToastComponent.html":{}}}],["void",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoaderService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["website",{"_index":399,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":386,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRepositories\n                            \n                            \n                                getUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRepositories\n                        \n                    \n                \n            \n            \n                \ngetRepositories(username: string, page: number, perPage: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                perPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(githubUsername: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                githubUsername\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.github.com/users/'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private apiUrl = 'https://api.github.com/users/';\n\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  getUser(githubUsername: string) {\n    return this.httpClient.get(`${this.apiUrl}${githubUsername}`);\n  }\n  getRepositories(username: string, page: number, perPage: number) {\n    const url = `${this.apiUrl}${username}/repos?page=${page}&per_page=${perPage}`;\n    return this.httpClient.get(url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _loaderService\n                            \n                            \n                                currentPage\n                            \n                            \n                                itemsPerPage\n                            \n                            \n                                maxItemsPerPage\n                            \n                            \n                                repoList\n                            \n                            \n                                user\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRepoList\n                            \n                            \n                                getUserDetails\n                            \n                            \n                                onItemsPerPageChange\n                            \n                            \n                                onPageChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_apiService: ApiService, _loaderService: LoaderService, _toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:17\n                            \n                        \n\n                \n                    \n                            The constructor function initializes private and public variables for the ApiService,\nLoaderService, and ToastService.\nclass. It is used to make API calls and handle the response.\nLoaderService class. It is used to show and hide loading indicators or spinners in the user\ninterface to indicate that a process is in progress.\nToastService class. It is used to display toast messages or notifications to the user.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe _apiService parameter is an instance of the ApiService\nclass. It is used to make API calls and handle the response.\n\n\n                                                        \n                                                \n                                                \n                                                        _loaderService\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe _loaderService parameter is an instance of the\nLoaderService class. It is used to show and hide loading indicators or spinners in the user\ninterface to indicate that a process is in progress.\n\n\n                                                        \n                                                \n                                                \n                                                        _toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe _toastService parameter is an instance of the\nToastService class. It is used to display toast messages or notifications to the user.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRepoList\n                        \n                    \n                \n            \n            \n                \ngetRepoList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:61\n                        \n                    \n\n\n            \n                \n                        The function getRepoList makes an API call to fetch repositories based on the provided username,\ncurrent page, and items per page, and updates the repoList variable with the fetched\nrepositories.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserDetails\n                        \n                    \n                \n            \n            \n                \ngetUserDetails()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:40\n                        \n                    \n\n\n            \n                \n                        The function getUserDetails fetches user data from an API based on a given username and displays\nsuccess or error messages accordingly.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onItemsPerPageChange\n                        \n                    \n                \n            \n            \n                \nonItemsPerPageChange(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:90\n                        \n                    \n\n\n            \n                \n                        The function updates the number of items per page, resets the current page to 1, and retrieves a\nnew list of repositories.\noccurred in the browser. It can be any type of event, such as a click, keypress, or change event.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event parameter is of type Event, which represents an event that has\noccurred in the browser. It can be any type of event, such as a click, keypress, or change event.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPageChange\n                        \n                    \n                \n            \n            \n                \nonPageChange(pageNumber: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:79\n                        \n                    \n\n\n            \n                \n                        The onPageChange function updates the current page number and retrieves a list of repositories.\nthat the user wants to navigate to.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pageNumber\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe pageNumber parameter is a number that represents the page number\nthat the user wants to navigate to.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _loaderService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoaderService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:32\n                        \n                    \n\n            \n                \n                    - The `_loaderService` parameter is an instance of the\n`LoaderService` class. It is used to show and hide loading indicators or spinners in the user\ninterface to indicate that a process is in progress.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemsPerPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxItemsPerPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repoList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ApiService } from './services/api.service';\nimport { LoaderService } from './services/loader.service';\nimport { ToastService } from './services/toast.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  username: string = '';\n  user: any = null\n  repoList: any[] = [];\n  currentPage: number = 1;\n  itemsPerPage: number = 10;\n  maxItemsPerPage: number = 100;\n\n  /**\n   * The constructor function initializes private and public variables for the ApiService,\n   * LoaderService, and ToastService.\n   * @param {ApiService} _apiService - The `_apiService` parameter is an instance of the `ApiService`\n   * class. It is used to make API calls and handle the response.\n   * @param {LoaderService} _loaderService - The `_loaderService` parameter is an instance of the\n   * `LoaderService` class. It is used to show and hide loading indicators or spinners in the user\n   * interface to indicate that a process is in progress.\n   * @param {ToastService} _toastService - The `_toastService` parameter is an instance of the\n   * `ToastService` class. It is used to display toast messages or notifications to the user.\n   */\n  constructor(\n    private _apiService: ApiService,\n    public _loaderService: LoaderService,\n    private _toastService: ToastService\n  ) { }\n\n /**\n  * The function `getUserDetails` fetches user data from an API based on a given username and displays\n  * success or error messages accordingly.\n  */\n  getUserDetails(): void {\n    this.user = null;\n    this.repoList = [];\n    this._apiService.getUser(this.username).subscribe((res: any) => {\n      if (res) {\n        this._toastService.showSuccess(\"User data fetched successfully\");\n        this.user = res\n        this.getRepoList()\n      } else {\n        this._toastService.showError(\"No user with that username found\");\n      }\n    }, (err: any) => {\n      this._toastService.showError(err.error.message);\n    });\n  }\n\n /**\n  * The function `getRepoList` makes an API call to fetch repositories based on the provided username,\n  * current page, and items per page, and updates the `repoList` variable with the fetched\n  * repositories.\n  */\n  getRepoList(): void {\n    this._apiService.getRepositories(this.username, this.currentPage, this.itemsPerPage)\n      .subscribe((repositories: any) => {\n        if (repositories) {\n          this._toastService.showSuccess(\"Repository fetched successfully\");\n          this.repoList = repositories;\n        } else {\n          this._toastService.showError(\"No repository found\");\n        }\n      }, (err: any) => {\n        this._toastService.showError(err.error.message);\n      });\n  }\n /**\n  * The onPageChange function updates the current page number and retrieves a list of repositories.\n  * @param {number} pageNumber - The pageNumber parameter is a number that represents the page number\n  * that the user wants to navigate to.\n  */\n  onPageChange(pageNumber: number): void {\n    this.currentPage = pageNumber;\n    this.getRepoList();\n  }\n\n  /**\n   * The function updates the number of items per page, resets the current page to 1, and retrieves a\n   * new list of repositories.\n   * @param {Event} event - The event parameter is of type Event, which represents an event that has\n   * occurred in the browser. It can be any type of event, such as a click, keypress, or change event.\n   */\n  onItemsPerPageChange(event: Event): void {\n    const target = event.target as HTMLSelectElement;\n    if (target && target.value) {\n      this.itemsPerPage = parseInt(target.value, 10);\n      this.currentPage = 1;\n      this.getRepoList();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        Search\n      \n    \n  \n\n  \n    \n      \n      \n        {{user.name}}\n        {{user.bio}}\n        \n          \n          {{user.location}}\n        \n        \n          \n          {{user.html_url}}\n        \n      \n    \n  \n\n  \n    \n      \n    \n  \n\n  \n    Previous\n    Page {{ currentPage }}\n    Next\n    Items per Page:\n    \n      {{ option }}\n    \n  \n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Search                                      {{user.name}}        {{user.bio}}                            {{user.location}}                                    {{user.html_url}}                                            Previous    Page {{ currentPage }}    Next    Items per Page:          {{ option }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'RepositoryComponent', 'selector': 'app-repository'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nRepositoryComponent\n\nRepositoryComponent\n\nAppModule -->\n\nRepositoryComponent->AppModule\n\n\n\n\n\nToastComponent\n\nToastComponent\n\nAppModule -->\n\nToastComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nLoaderInterceptor\n\nLoaderInterceptor\n\nAppModule -->\n\nLoaderInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            LoaderComponent\n                        \n                        \n                            RepositoryComponent\n                        \n                        \n                            ToastComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LoaderInterceptor\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { RepositoryComponent } from './components/repository/repository.component';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { LoaderInterceptor } from './services/http-interceptor.service';\nimport { ToastComponent } from './components/toast/toast.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    RepositoryComponent,\n    LoaderComponent,\n    ToastComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: LoaderInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loader/loader.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n\n\n            \n                styleUrls\n                ./loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent {\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./loader.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'RepositoryComponent', 'selector': 'app-repository'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoaderInterceptor.html":{"url":"interceptors/LoaderInterceptor.html","title":"interceptor - LoaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/http-interceptor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loaderService: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/http-interceptor.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/http-interceptor.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpInterceptor,\n  HttpEvent\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LoaderService } from './loader.service';\nimport { finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n  constructor(private loaderService: LoaderService) { }\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    this.loaderService.showLoader();\n\n    return next.handle(request).pipe(\n      finalize(() => {\n        this.loaderService.hideLoader();\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loaderState$\n                            \n                            \n                                    Private\n                                loaderSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hideLoader\n                            \n                            \n                                showLoader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hideLoader\n                        \n                    \n                \n            \n            \n                \nhideLoader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/loader.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLoader\n                        \n                    \n                \n            \n            \n                \nshowLoader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/loader.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loaderState$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.loaderSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/loader.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loaderSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/loader.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  private loaderSubject = new BehaviorSubject(false);\n  loaderState$ = this.loaderSubject.asObservable();\n\n  showLoader() {\n    this.loaderSubject.next(true);\n  }\n\n  hideLoader() {\n    this.loaderSubject.next(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RepositoryComponent.html":{"url":"components/RepositoryComponent.html","title":"component - RepositoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RepositoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/repository/repository.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-repository\n            \n\n\n\n            \n                styleUrls\n                ./repository.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./repository.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                repo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        repo\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/repository/repository.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-repository',\n  templateUrl: './repository.component.html',\n  styleUrls: ['./repository.component.scss']\n})\nexport class RepositoryComponent {\n  @Input() repo: any;\n}\n\n    \n\n    \n        {{repo.name}}\n{{repo.description}}\n\n  {{topic}}\n\n\n    \n\n    \n                \n                    ./repository.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{repo.name}}{{repo.description}}  {{topic}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'RepositoryComponent', 'selector': 'app-repository'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RepositoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/toast/toast.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toast\n            \n\n\n\n            \n                styleUrls\n                ./toast.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toast.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isError\n                            \n                            \n                                isSuccess\n                            \n                            \n                                isVisible\n                            \n                            \n                                toastMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoHideToast\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/toast/toast.component.ts:14\n                            \n                        \n\n                \n                    \n                            The constructor function takes in a private _toastService parameter of type ToastService.\na service that provides functionality for displaying toast notifications.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe _toastService parameter is of type ToastService. It is\na service that provides functionality for displaying toast notifications.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        autoHideToast\n                        \n                    \n                \n            \n            \n                \nautoHideToast()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/toast/toast.component.ts:40\n                        \n                    \n\n\n            \n                \n                        The autoHideToast function sets the isVisible property to false after a delay of 2000\nmilliseconds.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/toast/toast.component.ts:27\n                        \n                    \n\n\n            \n                \n                        The ngOnInit function subscribes to the toast observable and updates the toast message, success and\nerror flags, and visibility state accordingly.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toast/toast.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toast/toast.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toast/toast.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toastMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toast/toast.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { timer } from 'rxjs';\nimport { ToastService } from 'src/app/services/toast.service';\n\n@Component({\n  selector: 'app-toast',\n  templateUrl: './toast.component.html',\n  styleUrls: ['./toast.component.scss']\n})\nexport class ToastComponent {\n  toastMessage: string = '';\n  isSuccess: boolean = false;\n  isError: boolean = false;\n  isVisible: boolean = false;\n\n/**\n * The constructor function takes in a private _toastService parameter of type ToastService.\n * @param {ToastService} _toastService - The `_toastService` parameter is of type `ToastService`. It is\n * a service that provides functionality for displaying toast notifications.\n */\n  constructor(private _toastService: ToastService) { }\n\n /**\n  * The ngOnInit function subscribes to the toast observable and updates the toast message, success and\n  * error flags, and visibility state accordingly.\n  */\n  ngOnInit(): void {\n    this._toastService.getToastObservable().subscribe((toastData) => {\n      this.toastMessage = toastData.message;\n      this.isSuccess = toastData.isSuccess;\n      this.isError = toastData.isError;\n      this.isVisible = true;\n      this.autoHideToast();\n    });\n  }\n /**\n  * The `autoHideToast` function sets the `isVisible` property to false after a delay of 2000\n  * milliseconds.\n  */\n  autoHideToast(): void {\n    timer(2000).subscribe(() => {\n      this.isVisible = false;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    {{ toastMessage }}\n  \n\n\n    \n\n    \n                \n                    ./toast.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ toastMessage }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'RepositoryComponent', 'selector': 'app-repository'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/toast.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toastSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getToastObservable\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getToastObservable\n                        \n                    \n                \n            \n            \n                \ngetToastObservable()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/toast.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/toast.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/toast.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toastSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/toast.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n  private toastSubject = new Subject();\n\n  getToastObservable() {\n    return this.toastSubject.asObservable();\n  }\n\n  showSuccess(message: string) {\n    this.toastSubject.next({ message, isSuccess: true, isError: false });\n  }\n\n  showError(message: string) {\n    this.toastSubject.next({ message, isSuccess: false, isError: true });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                46 %\n                (6/13)\n            \n        \n        \n            \n                \n                src/app/components/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/repository/repository.component.ts\n            \n            component\n            RepositoryComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/http-interceptor.service.ts\n            \n            interceptor\n            LoaderInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/loader.service.ts\n            \n            injectable\n            LoaderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.1.0\n        \n            @angular/common : ^16.1.0\n        \n            @angular/compiler : ^16.1.0\n        \n            @angular/core : ^16.1.0\n        \n            @angular/forms : ^16.1.0\n        \n            @angular/platform-browser : ^16.1.0\n        \n            @angular/platform-browser-dynamic : ^16.1.0\n        \n            @angular/router : ^16.1.0\n        \n            octokit : ^3.1.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWelcome to Github Finder 👋\n\n  \n  \n    \n  \n  \n    \n  \n\n\n\nGithub user finder\n\n✨ Demo\nInstall\nExample :npm iUsage\nExample :npm run startRun tests\nExample :npm run testAuthor\n👤 Jayash\n\nWebsite: bit.ly/JayashRSY\nTwitter: @JayashRSY\nGithub: @JayashRSY\nLinkedIn: @JayashRSY\n\nShow your support\nGive a ⭐️ if this project helped you!\n\nAbout Unit test cases\nAPI Service\n\nThe service is first instantiated and HTTP testing is set up in the beforeEach block.\nThe first test checks if the service has been created successfully.\nThe second test ensures that the getUser method fetches user data from the API correctly.\nThe third test checks if the getRepositories method retrieves repository data based on the provided parameters.\n\nApp Component\n\nshould create the app checks if the component is created successfully.\nshould fetch user data and repositories on getUserDetails tests the getUserDetails method.\nshould show error message when getUserDetails fails tests the error scenario for getUserDetails.\nshould update current page and fetch new repositories on onPageChange tests the onPageChange method.\nshould update items per page and fetch new repositories on onItemsPerPageChange tests the onItemsPerPageChange method.\n\nNOTE: Make sure to adjust the mock data and API endpoints according to your specific use case. When you run your tests using ng test, these unit tests will be executed, and you should see the test results in your console.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nRepositoryComponent\n\nRepositoryComponent\n\nAppModule -->\n\nRepositoryComponent->AppModule\n\n\n\n\n\nToastComponent\n\nToastComponent\n\nAppModule -->\n\nToastComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nLoaderInterceptor\n\nLoaderInterceptor\n\nAppModule -->\n\nLoaderInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
